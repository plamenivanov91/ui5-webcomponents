/* eslint no-unused-vars: 0 */
import { html, svg, repeat, classMap, styleMap, ifDefined, unsafeHTML, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
function block0(context, tags, suffix) { return suffix ? html `<div class="ui5-tlgi-root"><div class="ui5-tlgi-btn-root"><div class="ui5-tlgi-icon-placeholder"><div class="ui5-tlgi-icon-dot"></div></div><div class="ui5-tlgi-line-placeholder"><div class="ui5-tlgi-line"></div></div><${scopeTag("ui5-toggle-button", tags, suffix)} icon="${ifDefined(this._groupItemIcon)}" @click="${this.onGroupItemClick}" class="ui5-tlgi-btn" .pressed="${ifDefined(this.collapsed)}">${ifDefined(this.groupName)}</${scopeTag("ui5-toggle-button", tags, suffix)}></div><ul class="ui5-tl-group-item">${repeat(this.items, (item, index) => item._id || index, (item, index) => block1.call(this, context, tags, suffix, item, index))}</ul></div>` : html `<div class="ui5-tlgi-root"><div class="ui5-tlgi-btn-root"><div class="ui5-tlgi-icon-placeholder"><div class="ui5-tlgi-icon-dot"></div></div><div class="ui5-tlgi-line-placeholder"><div class="ui5-tlgi-line"></div></div><ui5-toggle-button icon="${ifDefined(this._groupItemIcon)}" @click="${this.onGroupItemClick}" class="ui5-tlgi-btn" .pressed="${ifDefined(this.collapsed)}">${ifDefined(this.groupName)}</ui5-toggle-button></div><ul class="ui5-tl-group-item">${repeat(this.items, (item, index) => item._id || index, (item, index) => block1.call(this, context, tags, suffix, item, index))}</ul></div>`; }
function block1(context, tags, suffix, item, index) { return html `<li class="ui5-timeline-group-list-item"><slot name="${ifDefined(item._individualSlot)}"></slot></li>`; }
export default block0;
//# sourceMappingURL=TimelineGroupItemTemplate.lit.js.map