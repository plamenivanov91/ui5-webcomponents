/* eslint no-unused-vars: 0 */
import { html, svg, repeat, classMap, styleMap, ifDefined, unsafeHTML, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
function block0(context, tags, suffix) { return suffix ? html `<li class="ui5-nli-group-root ui5-nli-focusable" @focusin="${this._onfocusin}" @keydown="${this._onkeydown}" tabindex="${ifDefined(this.forcedTabIndex)}" aria-labelledby="${ifDefined(this.ariaLabelledBy)}" aria-description="${ifDefined(this.accInvisibleText)}" aria-level="1">${this.loading ? block1.call(this, context, tags, suffix) : undefined}<${scopeTag("ui5-busy-indicator", tags, suffix)} delay="${ifDefined(this.loadingDelay)}" ?active="${this.loading}" ?inert="${this.loading}" class="ui5-nli-loading"><div class="ui5-nli-group-content-wrapper"><div class="ui5-nli-group-header" @click="${this._onHeaderToggleClick}" @keydown="${this._onkeydown}" role="button" aria-expanded="${ifDefined(this._ariaExpanded)}" aria-controls="${ifDefined(this._id)}-notificationsList" title="${ifDefined(this.toggleIconAccessibleName)}"><${scopeTag("ui5-icon", tags, suffix)} name=${ifDefined(this.groupCollapsedIcon)} class="ui5-nli-group-toggle-icon" mode="Decorative"></${scopeTag("ui5-icon", tags, suffix)}><div id="${ifDefined(this._id)}-title-text" class="ui5-nli-group-title-text" part="title-text" role="heading" aria-level="2">${ifDefined(this.titleText)}</div><div class="ui5-nli-group-divider"></div></div><${scopeTag("ui5-notification-group-list", tags, suffix)} id="${ifDefined(this._id)}-notificationsList" class="ui5-nli-group-items" role="list" aria-labelledby="${ifDefined(this._id)}-title-text" growing=${ifDefined(this.growing)} @ui5-load-more="${ifDefined(this._onLoadMore)}"><slot></slot></${scopeTag("ui5-notification-group-list", tags, suffix)}></div></${scopeTag("ui5-busy-indicator", tags, suffix)}></li>` : html `<li class="ui5-nli-group-root ui5-nli-focusable" @focusin="${this._onfocusin}" @keydown="${this._onkeydown}" tabindex="${ifDefined(this.forcedTabIndex)}" aria-labelledby="${ifDefined(this.ariaLabelledBy)}" aria-description="${ifDefined(this.accInvisibleText)}" aria-level="1">${this.loading ? block1.call(this, context, tags, suffix) : undefined}<ui5-busy-indicator delay="${ifDefined(this.loadingDelay)}" ?active="${this.loading}" ?inert="${this.loading}" class="ui5-nli-loading"><div class="ui5-nli-group-content-wrapper"><div class="ui5-nli-group-header" @click="${this._onHeaderToggleClick}" @keydown="${this._onkeydown}" role="button" aria-expanded="${ifDefined(this._ariaExpanded)}" aria-controls="${ifDefined(this._id)}-notificationsList" title="${ifDefined(this.toggleIconAccessibleName)}"><ui5-icon name=${ifDefined(this.groupCollapsedIcon)} class="ui5-nli-group-toggle-icon" mode="Decorative"></ui5-icon><div id="${ifDefined(this._id)}-title-text" class="ui5-nli-group-title-text" part="title-text" role="heading" aria-level="2">${ifDefined(this.titleText)}</div><div class="ui5-nli-group-divider"></div></div><ui5-notification-group-list id="${ifDefined(this._id)}-notificationsList" class="ui5-nli-group-items" role="list" aria-labelledby="${ifDefined(this._id)}-title-text" growing=${ifDefined(this.growing)} @ui5-load-more="${ifDefined(this._onLoadMore)}"><slot></slot></ui5-notification-group-list></div></ui5-busy-indicator></li>`; }
function block1(context, tags, suffix) { return html `<span id="${ifDefined(this._id)}-loading" class="ui5-hidden-text">${ifDefined(this.loadingText)}</span>`; }
export default block0;
//# sourceMappingURL=NotificationListGroupItemTemplate.lit.js.map