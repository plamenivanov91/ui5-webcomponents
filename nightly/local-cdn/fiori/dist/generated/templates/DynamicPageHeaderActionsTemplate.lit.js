/* eslint no-unused-vars: 0 */
import { html, ifDefined, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
function block0(context, tags, suffix) { return suffix ? html `<div class="ui5-dynamic-page-header-actions-root"><div class="ui5-dynamic-page-header-actions--wrapper"><${scopeTag("ui5-button", tags, suffix)} class="ui5-dynamic-page-header-action ui5-dynamic-page-header-action-expand" @click="${this.onExpandClick}" icon="${ifDefined(this.arrowButtonIcon)}" accessible-name="${ifDefined(this.expandLabel)}" .accessibilityAttributes="${ifDefined(this.accessibilityAttributes)}" title="${ifDefined(this.expandLabel)}" @mouseover="${this.onExpandHoverIn}" @mouseout="${this.onExpandHoverOut}"></${scopeTag("ui5-button", tags, suffix)}>${this.showPinButton ? block1.call(this, context, tags, suffix) : undefined}</div></div>` : html `<div class="ui5-dynamic-page-header-actions-root"><div class="ui5-dynamic-page-header-actions--wrapper"><ui5-button class="ui5-dynamic-page-header-action ui5-dynamic-page-header-action-expand" @click="${this.onExpandClick}" icon="${ifDefined(this.arrowButtonIcon)}" accessible-name="${ifDefined(this.expandLabel)}" .accessibilityAttributes="${ifDefined(this.accessibilityAttributes)}" title="${ifDefined(this.expandLabel)}" @mouseover="${this.onExpandHoverIn}" @mouseout="${this.onExpandHoverOut}"></ui5-button>${this.showPinButton ? block1.call(this, context, tags, suffix) : undefined}</div></div>`; }
function block1(context, tags, suffix) { return suffix ? html `<${scopeTag("ui5-toggle-button", tags, suffix)} class="ui5-dynamic-page-header-action ui5-dynamic-page-header-action-pin" @click="${this.onPinClick}" icon="${ifDefined(this.pinButtonIcon)}" ?pressed="${this.pinned}" .accessibilityAttributes="${ifDefined(this.accessibilityAttributes)}" accessible-name="${ifDefined(this.pinLabel)}" title="${ifDefined(this.pinLabel)}"></${scopeTag("ui5-toggle-button", tags, suffix)}>` : html `<ui5-toggle-button class="ui5-dynamic-page-header-action ui5-dynamic-page-header-action-pin" @click="${this.onPinClick}" icon="${ifDefined(this.pinButtonIcon)}" ?pressed="${this.pinned}" .accessibilityAttributes="${ifDefined(this.accessibilityAttributes)}" accessible-name="${ifDefined(this.pinLabel)}" title="${ifDefined(this.pinLabel)}"></ui5-toggle-button>`; }
export default block0;
//# sourceMappingURL=DynamicPageHeaderActionsTemplate.lit.js.map