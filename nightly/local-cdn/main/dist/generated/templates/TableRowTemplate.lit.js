/* eslint no-unused-vars: 0 */
import { html, svg, repeat, classMap, styleMap, ifDefined, unsafeHTML, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import { getCustomElementsScopingSuffix } from "@ui5/webcomponents-base/dist/CustomElementsScopeUtils.js";
function block0(context, tags, suffix) { return html `${this._hasRowSelector ? block1.call(this, context, tags, suffix) : undefined}${repeat(this._visibleCells, (item, index) => item._id || index, (item, index) => block4.call(this, context, tags, suffix, item, index))}${this._hasRowActions ? block5.call(this, context, tags, suffix) : undefined}${this._renderNavigated ? block9.call(this, context, tags, suffix) : undefined}${this._popinCells.length ? block10.call(this, context, tags, suffix) : undefined} `; }
function block1(context, tags, suffix) { return suffix ? html `<${scopeTag("ui5-table-cell", tags, suffix)} id="selection-cell" aria-selected="${ifDefined(this._isSelected)}" fixed ui5-table-selection-component>${this._isMultiSelect ? block2.call(this, context, tags, suffix) : block3.call(this, context, tags, suffix)}</${scopeTag("ui5-table-cell", tags, suffix)}>` : html `<ui5-table-cell id="selection-cell" aria-selected="${ifDefined(this._isSelected)}" fixed ui5-table-selection-component>${this._isMultiSelect ? block2.call(this, context, tags, suffix) : block3.call(this, context, tags, suffix)}</ui5-table-cell>`; }
function block2(context, tags, suffix) { return suffix ? html `<${scopeTag("ui5-checkbox", tags, suffix)} id="selection-component" tabindex="-1" ?checked="${this._isSelected}" accessible-name="${ifDefined(this._i18nRowSelector)}" @ui5-change="${ifDefined(this._informSelectionChange)}"></${scopeTag("ui5-checkbox", tags, suffix)}>` : html `<ui5-checkbox id="selection-component" tabindex="-1" ?checked="${this._isSelected}" accessible-name="${ifDefined(this._i18nRowSelector)}" @ui5-change="${ifDefined(this._informSelectionChange)}"></ui5-checkbox>`; }
function block3(context, tags, suffix) { return suffix ? html `<${scopeTag("ui5-radio-button", tags, suffix)} id="selection-component" tabindex="-1" name="${ifDefined(this._tableId)}" ?checked="${this._isSelected}" @ui5-change="${ifDefined(this._informSelectionChange)}" accessible-name="${ifDefined(this._i18nRowSelector)}"></${scopeTag("ui5-radio-button", tags, suffix)}>` : html `<ui5-radio-button id="selection-component" tabindex="-1" name="${ifDefined(this._tableId)}" ?checked="${this._isSelected}" @ui5-change="${ifDefined(this._informSelectionChange)}" accessible-name="${ifDefined(this._i18nRowSelector)}"></ui5-radio-button>`; }
function block4(context, tags, suffix, item, index) { return html `<slot name="${ifDefined(item._individualSlot)}"></slot>`; }
function block5(context, tags, suffix) { return suffix ? html `<${scopeTag("ui5-table-cell", tags, suffix)} id="actions-cell">${repeat(this._flexibleActions, (item, index) => item._id || index, (item, index) => block6.call(this, context, tags, suffix, item, index))}${this._hasOverflowActions ? block7.call(this, context, tags, suffix) : undefined}${repeat(this._fixedActions, (item, index) => item._id || index, (item, index) => block8.call(this, context, tags, suffix, item, index))}</${scopeTag("ui5-table-cell", tags, suffix)}>` : html `<ui5-table-cell id="actions-cell">${repeat(this._flexibleActions, (item, index) => item._id || index, (item, index) => block6.call(this, context, tags, suffix, item, index))}${this._hasOverflowActions ? block7.call(this, context, tags, suffix) : undefined}${repeat(this._fixedActions, (item, index) => item._id || index, (item, index) => block8.call(this, context, tags, suffix, item, index))}</ui5-table-cell>`; }
function block6(context, tags, suffix, item, index) { return html `<slot name="${ifDefined(item._individualSlot)}"></slot>`; }
function block7(context, tags, suffix) { return suffix ? html `<${scopeTag("ui5-button", tags, suffix)} id="overflow" icon="overflow" design="Transparent" @click="${this._onOverflowButtonClick}"></${scopeTag("ui5-button", tags, suffix)}>` : html `<ui5-button id="overflow" icon="overflow" design="Transparent" @click="${this._onOverflowButtonClick}"></ui5-button>`; }
function block8(context, tags, suffix, item, index) { return html `<slot name="${ifDefined(item._individualSlot)}"></slot>`; }
function block9(context, tags, suffix) { return suffix ? html `<${scopeTag("ui5-table-cell", tags, suffix)} id="navigated-cell" excluded-from-navigation><div id="navigated"></div></${scopeTag("ui5-table-cell", tags, suffix)}>` : html `<ui5-table-cell id="navigated-cell" excluded-from-navigation><div id="navigated"></div></ui5-table-cell>`; }
function block10(context, tags, suffix) { return suffix ? html `<${scopeTag("ui5-table-cell", tags, suffix)} id="popin-cell">${repeat(this._popinCells, (item, index) => item._id || index, (item, index) => block11.call(this, context, tags, suffix, item, index))}</${scopeTag("ui5-table-cell", tags, suffix)}>` : html `<ui5-table-cell id="popin-cell">${repeat(this._popinCells, (item, index) => item._id || index, (item, index) => block11.call(this, context, tags, suffix, item, index))}</ui5-table-cell>`; }
function block11(context, tags, suffix, item, index) { return html `<slot name="${ifDefined(item._individualSlot)}"></slot>`; }
function template() { return block0.call(this, this, this.constructor.tagsToScope, getCustomElementsScopingSuffix()); }
export default template;
//# sourceMappingURL=TableRowTemplate.lit.js.map