/* eslint no-unused-vars: 0 */
import { html, classMap, ifDefined, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
function block0(context, tags, suffix) { return suffix ? html `<div class="ui5-cal-root" @keydown=${this._onkeydown}><div id="${ifDefined(this._id)}-content" class="ui5-cal-content"><${scopeTag("ui5-daypicker", tags, suffix)} id="${ifDefined(this._id)}-daypicker" ?hidden="${this._isDayPickerHidden}" format-pattern="${ifDefined(this._formatPattern)}" .selectedDates="${ifDefined(this._selectedDatesTimestamps)}" .specialCalendarDates="${ifDefined(this._specialCalendarDates)}" ._hidden="${ifDefined(this._isDayPickerHidden)}" .primaryCalendarType="${ifDefined(this._primaryCalendarType)}" .secondaryCalendarType="${ifDefined(this._secondaryCalendarType)}" .selectionMode="${ifDefined(this.selectionMode)}" .minDate="${ifDefined(this.minDate)}" .maxDate="${ifDefined(this.maxDate)}" timestamp="${ifDefined(this._timestamp)}" ?hide-week-numbers="${this.hideWeekNumbers}" @ui5-change="${ifDefined(this.onSelectedDatesChange)}" @ui5-navigate="${ifDefined(this.onNavigate)}"></${scopeTag("ui5-daypicker", tags, suffix)}><${scopeTag("ui5-monthpicker", tags, suffix)} id="${ifDefined(this._id)}-MP" ?hidden="${this._isMonthPickerHidden}" format-pattern="${ifDefined(this._formatPattern)}" .selectedDates="${ifDefined(this._selectedDatesTimestamps)}" ._hidden="${ifDefined(this._isMonthPickerHidden)}" .primaryCalendarType="${ifDefined(this._primaryCalendarType)}" .secondaryCalendarType="${ifDefined(this._secondaryCalendarType)}" .minDate="${ifDefined(this.minDate)}" .maxDate="${ifDefined(this.maxDate)}" timestamp="${ifDefined(this._timestamp)}" @ui5-change="${ifDefined(this.onSelectedMonthChange)}" @ui5-navigate="${ifDefined(this.onNavigate)}"></${scopeTag("ui5-monthpicker", tags, suffix)}><${scopeTag("ui5-yearpicker", tags, suffix)} id="${ifDefined(this._id)}-YP" ?hidden="${this._isYearPickerHidden}" format-pattern="${ifDefined(this._formatPattern)}" .selectedDates="${ifDefined(this._selectedDatesTimestamps)}" ._hidden="${ifDefined(this._isYearPickerHidden)}" .primaryCalendarType="${ifDefined(this._primaryCalendarType)}" .secondaryCalendarType="${ifDefined(this._secondaryCalendarType)}" .minDate="${ifDefined(this.minDate)}" .maxDate="${ifDefined(this.maxDate)}" timestamp="${ifDefined(this._timestamp)}" @ui5-change="${ifDefined(this.onSelectedYearChange)}" @ui5-navigate="${ifDefined(this.onNavigate)}"></${scopeTag("ui5-yearpicker", tags, suffix)}></div><div class="ui5-calheader"><div class="ui5-calheader-root"><div data-ui5-cal-header-btn-prev class="${classMap(this.classes.prevButton)}" role="button" @mousedown=${this.onPrevButtonClick} title="${ifDefined(this.headerPreviousButtonText)}"><${scopeTag("ui5-icon", tags, suffix)} class="ui5-calheader-arrowicon" name="slim-arrow-left"></${scopeTag("ui5-icon", tags, suffix)}></div><div class="ui5-calheader-midcontainer"><div data-ui5-cal-header-btn-month class="ui5-calheader-arrowbtn ui5-calheader-middlebtn" ?hidden="${this._isHeaderMonthButtonHidden}" tabindex="0" role="button" aria-label="${ifDefined(this.accInfo.ariaLabelMonthButton)}" @click=${this.onHeaderShowMonthPress} @keydown=${this.onMonthButtonKeyDown} @keyup=${this.onMonthButtonKeyUp}><span>${ifDefined(this._headerMonthButtonText)}</span>${this.hasSecondaryCalendarType ? block1.call(this, context, tags, suffix) : undefined}</div><div data-ui5-cal-header-btn-year class="ui5-calheader-arrowbtn ui5-calheader-middlebtn" ?hidden="${this._isHeaderYearButtonHidden}" tabindex="0" role="button" @click=${this.onHeaderShowYearPress} @keydown=${this.onYearButtonKeyDown} @keyup=${this.onYearButtonKeyUp}><span>${ifDefined(this._headerYearButtonText)}</span>${this.hasSecondaryCalendarType ? block2.call(this, context, tags, suffix) : undefined}</div></div><div data-ui5-cal-header-btn-next class="${classMap(this.classes.nextButton)}" role="button" @mousedown=${this.onNextButtonClick} title=${ifDefined(this.headerNextButtonText)}><${scopeTag("ui5-icon", tags, suffix)} class="ui5-calheader-arrowicon" name="slim-arrow-right"></${scopeTag("ui5-icon", tags, suffix)}></div></div></div></div><div @ui5-_calendar-legend-selection-change=${ifDefined(this._onCalendarLegendSelectionChange)} @ui5-_calendar-legend-focus-out=${ifDefined(this._onLegendFocusOut)}><slot name="calendarLegend"></slot></div>` : html `<div class="ui5-cal-root" @keydown=${this._onkeydown}><div id="${ifDefined(this._id)}-content" class="ui5-cal-content"><ui5-daypicker id="${ifDefined(this._id)}-daypicker" ?hidden="${this._isDayPickerHidden}" format-pattern="${ifDefined(this._formatPattern)}" .selectedDates="${ifDefined(this._selectedDatesTimestamps)}" .specialCalendarDates="${ifDefined(this._specialCalendarDates)}" ._hidden="${ifDefined(this._isDayPickerHidden)}" .primaryCalendarType="${ifDefined(this._primaryCalendarType)}" .secondaryCalendarType="${ifDefined(this._secondaryCalendarType)}" .selectionMode="${ifDefined(this.selectionMode)}" .minDate="${ifDefined(this.minDate)}" .maxDate="${ifDefined(this.maxDate)}" timestamp="${ifDefined(this._timestamp)}" ?hide-week-numbers="${this.hideWeekNumbers}" @ui5-change="${ifDefined(this.onSelectedDatesChange)}" @ui5-navigate="${ifDefined(this.onNavigate)}"></ui5-daypicker><ui5-monthpicker id="${ifDefined(this._id)}-MP" ?hidden="${this._isMonthPickerHidden}" format-pattern="${ifDefined(this._formatPattern)}" .selectedDates="${ifDefined(this._selectedDatesTimestamps)}" ._hidden="${ifDefined(this._isMonthPickerHidden)}" .primaryCalendarType="${ifDefined(this._primaryCalendarType)}" .secondaryCalendarType="${ifDefined(this._secondaryCalendarType)}" .minDate="${ifDefined(this.minDate)}" .maxDate="${ifDefined(this.maxDate)}" timestamp="${ifDefined(this._timestamp)}" @ui5-change="${ifDefined(this.onSelectedMonthChange)}" @ui5-navigate="${ifDefined(this.onNavigate)}"></ui5-monthpicker><ui5-yearpicker id="${ifDefined(this._id)}-YP" ?hidden="${this._isYearPickerHidden}" format-pattern="${ifDefined(this._formatPattern)}" .selectedDates="${ifDefined(this._selectedDatesTimestamps)}" ._hidden="${ifDefined(this._isYearPickerHidden)}" .primaryCalendarType="${ifDefined(this._primaryCalendarType)}" .secondaryCalendarType="${ifDefined(this._secondaryCalendarType)}" .minDate="${ifDefined(this.minDate)}" .maxDate="${ifDefined(this.maxDate)}" timestamp="${ifDefined(this._timestamp)}" @ui5-change="${ifDefined(this.onSelectedYearChange)}" @ui5-navigate="${ifDefined(this.onNavigate)}"></ui5-yearpicker></div><div class="ui5-calheader"><div class="ui5-calheader-root"><div data-ui5-cal-header-btn-prev class="${classMap(this.classes.prevButton)}" role="button" @mousedown=${this.onPrevButtonClick} title="${ifDefined(this.headerPreviousButtonText)}"><ui5-icon class="ui5-calheader-arrowicon" name="slim-arrow-left"></ui5-icon></div><div class="ui5-calheader-midcontainer"><div data-ui5-cal-header-btn-month class="ui5-calheader-arrowbtn ui5-calheader-middlebtn" ?hidden="${this._isHeaderMonthButtonHidden}" tabindex="0" role="button" aria-label="${ifDefined(this.accInfo.ariaLabelMonthButton)}" @click=${this.onHeaderShowMonthPress} @keydown=${this.onMonthButtonKeyDown} @keyup=${this.onMonthButtonKeyUp}><span>${ifDefined(this._headerMonthButtonText)}</span>${this.hasSecondaryCalendarType ? block1.call(this, context, tags, suffix) : undefined}</div><div data-ui5-cal-header-btn-year class="ui5-calheader-arrowbtn ui5-calheader-middlebtn" ?hidden="${this._isHeaderYearButtonHidden}" tabindex="0" role="button" @click=${this.onHeaderShowYearPress} @keydown=${this.onYearButtonKeyDown} @keyup=${this.onYearButtonKeyUp}><span>${ifDefined(this._headerYearButtonText)}</span>${this.hasSecondaryCalendarType ? block2.call(this, context, tags, suffix) : undefined}</div></div><div data-ui5-cal-header-btn-next class="${classMap(this.classes.nextButton)}" role="button" @mousedown=${this.onNextButtonClick} title=${ifDefined(this.headerNextButtonText)}><ui5-icon class="ui5-calheader-arrowicon" name="slim-arrow-right"></ui5-icon></div></div></div></div><div @ui5-_calendar-legend-selection-change=${ifDefined(this._onCalendarLegendSelectionChange)} @ui5-_calendar-legend-focus-out=${ifDefined(this._onLegendFocusOut)}><slot name="calendarLegend"></slot></div>`; }
function block1(context, tags, suffix) { return html `<span class="ui5-calheader-btn-sectext">${ifDefined(this.secondMonthButtonText)}</span>`; }
function block2(context, tags, suffix) { return html `<span class="ui5-calheader-btn-sectext">${ifDefined(this._headerYearButtonTextSecType)}</span>`; }
export default block0;
//# sourceMappingURL=CalendarTemplate.lit.js.map