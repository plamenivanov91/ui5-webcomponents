"use strict";import n from"../../types/MovePlacement.js";import p from"../../types/Orientation.js";const A=(t,s,a,r)=>{const e=Math.abs(t-s),o=Math.abs(t-a),l=Math.abs(t-r),i=Math.min(e,o,l);let c=[];switch(i){case e:c=[n.Before];break;case o:c=[n.On,e<l?n.Before:n.After];break;case l:c=[n.After];break}return c},w=(t,s,a)=>{let r=Number.POSITIVE_INFINITY,e=null;for(let m=0;m<t.length;m++){const u=t[m],{left:g,width:E,top:P,height:T}=u.getBoundingClientRect();let h;a===p.Vertical?h=P+T/2:h=g+E/2;const d=Math.abs(s-h);d<r&&(r=d,e=u)}if(!e)return null;const{width:o,height:l,left:i,right:c,top:b,bottom:M}=e.getBoundingClientRect();let f;return a===p.Vertical?f=A(s,b,b+l/2,M):f=A(s,i,i+o/2,c),{element:e,placements:f}},k=(t,s,a)=>{let r=t.indexOf(s);const e=[];switch(a.key){case"ArrowLeft":case"ArrowUp":r--,r>=0&&e.push({element:t[r],placement:n.Before});break;case"ArrowRight":case"ArrowDown":r++,r<t.length&&e.push({element:t[r],placement:n.After});break;case"Home":t.forEach(o=>{e.push({element:o,placement:n.Before})});break;case"End":t.reverse().forEach(o=>{e.push({element:o,placement:n.After})});break}return e};export{w as findClosestPosition,k as findClosestPositionsByKey};
//# sourceMappingURL=findClosestPosition.js.map
